detroit-github(5) - github services for detroit
===============================================

## DESCRIPTION

The Github plugin provides services tied to a project's Github
repository. Presently it supports gh-pages publishing.

## OPTIONS

The following options can be used in Detroit toolchain files
for defining a Github tool instance.

  * `remote` - The remote to use (defaults to 'origin').

  * `message` - Commit message.

  * `sitemap` - List of directories and files to transfer.
    If a single directory entry is given then the contents
    of that directory will be transferred. Defaults to `site`,
    `website` or `doc`.

  * `keep` - List of any files/directory to not overwrite in branch.

## EXAMPLES

If you keep your website in a project sub-directory called either
`site`, `web`, `website` or `www`, and failing those, `doc` or `docs`,
then the defaults settings are likely sufficient.

    github:
      active: true

If the files to copy to the gh-pages branch are more entailed, use
a mapping of source to destination. For example, if we want to copy
all the files in `site/` to gh-pages, but also all the files in `doc/`
to a directory called `doc` we could use:

    github:
      sitemap:
        site: .
        doc: doc

However, this isn't usually necessary, since a symlink could be used
instead.

    $ ln -s doc site/doc

You can check symlinks into git and they will be transferred as
if the real file when copied to the gh-pages file. So a more complex
`sitemap` is really only needed when more specific selections or
complex globs are needed.


## RESOURCES

For more information:

  * [API Documentation](http://rubydoc.info/gems/detroit-github)

  * [Development Site](http://github.com/detroit/detroit-github)


## COPYRIGHT

Copyright (c) 2010 Rubyworks

Detroit GitHub is distributable in accordance with the GPL v3 license.


## SEE ALSO

detroit(1), git(1), detroit-grancher(5)
